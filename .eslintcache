[{"/Users/rickm/Desktop/findfreespace/findfreespace-client/src/index.js":"1","/Users/rickm/Desktop/findfreespace/findfreespace-client/src/App.js":"2","/Users/rickm/Desktop/findfreespace/findfreespace-client/src/reportWebVitals.js":"3","/Users/rickm/Desktop/findfreespace/findfreespace-client/src/components/MainBar.js":"4","/Users/rickm/Desktop/findfreespace/findfreespace-client/src/components/FloorList.js":"5"},{"size":428,"mtime":1610263283680,"results":"6","hashOfConfig":"7"},{"size":1458,"mtime":1610304605211,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1610263283680,"results":"9","hashOfConfig":"7"},{"size":1023,"mtime":1610297808696,"results":"10","hashOfConfig":"7"},{"size":1817,"mtime":1610302376195,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1cxxfff",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/rickm/Desktop/findfreespace/findfreespace-client/src/index.js",[],["24","25"],"/Users/rickm/Desktop/findfreespace/findfreespace-client/src/App.js",["26","27","28"],"/Users/rickm/Desktop/findfreespace/findfreespace-client/src/reportWebVitals.js",[],"/Users/rickm/Desktop/findfreespace/findfreespace-client/src/components/MainBar.js",["29","30"],"import React from 'react';\nimport axios from 'axios';\n\nconst MainBar = ({handleSelect, buttonName}) => {\n    \n    const [buildingsList, setBuildingsList] = React.useState([]);\n\n    \n    React.useEffect(() => {\n        axios.get('/buildings/').then((res) => {\n            const buildings = res.data\n            setBuildingsList(buildings);\n        })\n        .catch ((err) => {\n            console.log(err);\n        })\n    }, []);\n\n    const renderDropdownOptions = () => {\n\n        return buildingsList.map((building) => {\n            return (\n                <li><a key={building.name} onClick={() => { handleSelect(building.name)}}>{building.name}</a></li>);\n        })\n    }\n    return (\n        <div class=\"select\">\n            <img class=\"icon\" src=\"https://image.flaticon.com/icons/png/128/16/16895.png?ga=GA1.2.633345297.1602720000\"/>\n            <button>{buttonName}</button>\n                <ul>\n                    {renderDropdownOptions()}\n                </ul>\n        </div>  \n    )\n}\n\nexport default MainBar;\n","/Users/rickm/Desktop/findfreespace/findfreespace-client/src/components/FloorList.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":4,"column":10,"nodeType":"37","messageId":"38","endLine":4,"endColumn":20},{"ruleId":"35","severity":1,"message":"39","line":5,"column":8,"nodeType":"37","messageId":"38","endLine":5,"endColumn":19},{"ruleId":"40","severity":1,"message":"41","line":40,"column":9,"nodeType":"42","endLine":40,"endColumn":31},{"ruleId":"40","severity":1,"message":"41","line":23,"column":21,"nodeType":"42","endLine":23,"endColumn":91},{"ruleId":"43","severity":1,"message":"44","line":28,"column":13,"nodeType":"42","endLine":28,"endColumn":122},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'RefreshIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]